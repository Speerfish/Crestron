[
Version=1
]
[
ObjTp=FSgntr
Sgntr=UserMacro
RelVrs=2.11.10
IntStrVrs=2
MinSMWVrs=0
MinTIOVrs=0
SavedBy=SMW2.11.10
]
[
ObjTp=Hd
S0Nd=1
S1Nd=2
SLNd=3
PrNm=Analog Vol to Serial.umc
DbVr=20.04.008.00
DvcDbVr=20.07.005.00
PgmNm=ja
DlrNm=Crestron Electronics
Incl=362,378,380,405,407,408,409,478,522,537,554,586,590,611,624,767,830,883,1032,1062,1079,1134,1157,1199,1220,1222,1299,1348,1439,1472,1473,1499,
McNm=Analog Vol to Serial
SmVr=593
DvVr=593
TpN1=1
TpN2=2
TpN3=3
TpN4=4
TpN5=5
APg=1
FltTmp=1
FpCS=0
Cmn1=This module is intended to be used for Volume feedback\\This module||1
Cmn2=will take an ANALOG input in the range\\of 0% - 100% (0 - 65,535)||1
Cmn3=and convert the analog value\\to a text string in the range of 0||1
Cmn4=- 100 which can then \\be sent to a Serial text feedback Join.\\
Cmn5=\\Want to add the " % " sign after the sent digit\\Modify the (3)||1
Cmn6=Analog to Serial symbols (TXA)\\(symbol 1.11, 1.14 & 1.18) as follows.
Cmn7=\\Add a single parameter field to the middle of the symbol\\Enter||1
Cmn8=the Character to send, in this case, %\\Now when the string is sent||1
Cmn9=out, the % sign will\\be added after the digit and you will then\\
Cmn10=not have to have a seperate button object on the \\VTPro project||1
Cmn11=with the % aligned with these displayed\\digits.
]
[
ObjTp=Bk
Nm1=\
Sx1=0
Sy1=0
Mx1=0
]
[
ObjTp=Bw
H=1
Lx=0
Ly=0
Rx=359
Ry=300
Xm=-1
Ym=-1
SH=21
Z=100
Ht=1
Hi=1
]
[
ObjTp=Bw
H=1
Lx=0
Ly=300
Rx=359
Ry=600
Xm=-1
Ym=-1
SH=17
Z=100
Ht=1
Hi=1
]
[
ObjTp=Bw
H=1
Lx=359
Ly=0
Rx=718
Ry=200
Xm=-1
Ym=-1
SH=14
Z=100
Ht=1
Hi=1
]
[
ObjTp=Bw
H=1
Lx=359
Ly=200
Rx=718
Ry=400
Xm=-1
Ym=-1
SH=8
Z=100
Ht=1
Hi=1
]
[
ObjTp=Bw
H=1
Lx=359
Ly=400
Rx=718
Ry=600
Xm=-1
Ym=-1
SH=6
Z=100
Ht=1
Hi=1
]
[
ObjTp=Symbol
Name=Analog Vol to Serial
Code=1
SmplCName=Analog Vol to Serial.umc
Smpl-C=3
CompilerTimePrecision=Single_Or_Double_Precision
Exclusions=1,19,20,21,88,89,167,168,179,216,225,248,249,266,302,305,
SMWRev=0
TIORev=0
HelpID=1055
APg=1
StdCmd=0
FltTmp=1
FpCS=0
NumFixedInputs=1
NumFixedOutputs=1
MinVariableInputs=0
MinVariableInputsList2=0
MinVariableInputsList3=0
MinVariableOutputs=0
MinVariableOutputsList2=0
MinVariableOutputsList3=0
MinVariableParams=0
SymbolTree=1
InputSigType1=Analog
OutputSigType1=Serial
ParamSigType1=Time|Percent|Constant|String|FileName|HexAddress|Any
InputCue1=Analog_Volume_In
OutputCue1=Serial_Volume_Text$
ParamCue1=p1
FileName=Analog Vol to Serial.umc
]
[
ObjTp=Sm
H=1
SmC=157
Nm=Central Control Modules
ObjVer=1
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=2
SmC=157
Nm=Network Modules
ObjVer=1
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=3
SmC=157
Nm=Ethernet
ObjVer=1
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=4
SmC=156
Nm=Logic
ObjVer=1
CF=2
mC=1
C1=7
]
[
ObjTp=Sm
H=5
SmC=157
Nm=DefineArguments
ObjVer=1
CF=2
n1I=1
n1O=1
mC=1
C1=6
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=6
SmC=55
ObjVer=1
PrH=5
CF=2
n1I=1
n1O=1
mI=1
I1=4
mO=1
tO=1
O1=20
mP=1
P1=
]
[
ObjTp=Sm
H=7
SmC=156
ObjVer=1
PrH=4
CF=2
Cmn1=Send 0 - 100% as text from analog value\\
mC=18
C1=8
C2=9
C3=10
C4=11
C5=12
C6=13
C7=14
C8=15
C9=16
C10=17
C11=18
C12=19
C13=20
C14=21
C15=22
C16=23
C17=24
C18=25
]
[
ObjTp=Sm
H=8
SmC=541
ObjVer=1
PrH=7
CF=2
n1I=1
n1O=1
Cmn1=Scale to 0d to 100d for text display\\
mI=1
I1=4
mO=1
tO=1
O1=5
mP=5
P1=0%
P2=100%
P3=0d
P4=100d
P5=0d
]
[
ObjTp=Sm
H=9
SmC=72
ObjVer=1
PrH=7
CF=2
n1I=1
n1O=2
Cmn1=trigger on new value\\
mI=1
I1=5
mO=2
tO=2
O1=6
mP=1
P1=0.01s
]
[
ObjTp=Sm
H=10
SmC=32
ObjVer=1
PrH=7
CF=2
n1I=1
n1O=1
Cmn1=add 30h offset to get ASCII printable character (0 - 9)\\
mI=1
I1=2
mO=1
tO=1
O1=7
mP=1
P1=30h
]
[
ObjTp=Sm
H=11
SmC=32
ObjVer=1
PrH=7
CF=2
n1I=1
n1O=2
Cmn1=compare values - below 10%, between 10% - 99%\\
mI=1
I1=2
mO=2
tO=2
O1=8
O2=9
mP=2
P1=99d
P2=10d
]
[
ObjTp=Sm
H=12
SmC=492
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=6
Cmn1=at or below 100%\\
mI=2
I1=5
I2=8
mO=6
tO=6
O4=10
O5=11
]
[
ObjTp=Sm
H=13
SmC=492
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=6
Cmn1=below 10%\\
mI=2
I1=5
I2=9
mO=6
tO=6
O3=12
]
[
ObjTp=Sm
H=14
SmC=28
ObjVer=1
PrH=7
CF=2
n1I=3
n1O=3
Cmn1=Determine whether to send 1, 2 or 3 text characters\\send 1 character||1
Cmn2=if 0% - 9%\\send 2 characters if 10% - 99%\\send 3 characters if||1
Cmn3=at 100%
mI=3
I1=12
I2=10
I3=11
mO=3
tO=3
O1=13
O2=14
O3=15
mP=6
P1=H,L,L
P2=H,H,L
P3=L,L,H
P4=H,L,L
P5=L,H,L
P6=L,L,H
]
[
ObjTp=Sm
H=15
SmC=57
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=1
Cmn1=add 30h offset to get ASCII ONES digits 0 - 9\\
mI=2
I1=16
I2=7
mO=1
tO=1
O1=17
]
[
ObjTp=Sm
H=16
SmC=1
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=1
Cmn1=send 1 digit if volume between 0% - 9%\\
mI=2
I1=13
I2=6
mO=1
tO=1
O1=18
]
[
ObjTp=Sm
H=17
SmC=114
ObjVer=1
PrH=7
CF=2
n1I=1
n1O=2
Cmn1=For 0-99%, divide by 10 to TENS and ONES digits\\
mI=1
I1=5
mO=2
tO=2
O1=19
O2=16
mP=1
P1=10d
]
[
ObjTp=Sm
H=18
SmC=77
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=1
Cmn1=Build string for 1 digit, 0% - 9%\\
mI=2
I1=18
I2=17
mO=1
tO=1
O1=20
mP=2
P1=256d
P2=""
]
[
ObjTp=Sm
H=19
SmC=57
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=1
Cmn1=add 30h offset to get ASCII TENS digits 0 - 9\\
mI=2
I1=19
I2=7
mO=1
tO=1
O1=21
]
[
ObjTp=Sm
H=20
SmC=1
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=1
Cmn1=send 2 digits if between 10% - 99%\\
mI=2
I1=14
I2=6
mO=1
tO=1
O1=22
]
[
ObjTp=Sm
H=21
SmC=77
ObjVer=1
PrH=7
CF=2
n1I=3
n1O=1
Cmn1=Build string for 2 digits, 10% - 99%\\
mI=3
I1=22
I2=21
I3=17
mO=1
tO=1
O1=20
mP=3
P1=256d
P2=""
P3=""
]
[
ObjTp=Sm
H=22
SmC=38
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=1
Cmn1=look for Volume at 100%\\
mI=2
I1=19
mO=1
tO=1
O1=23
mP=1
P1=0Ah
]
[
ObjTp=Sm
H=23
SmC=32
ObjVer=1
PrH=7
CF=2
n1I=1
n1O=3
Cmn1=If at 100%, send values to build string\\
mI=1
I1=23
mO=3
tO=3
O1=24
O2=25
O3=26
mP=3
P1=31h
P2=30h
P3=30h
]
[
ObjTp=Sm
H=24
SmC=1
ObjVer=1
PrH=7
CF=2
n1I=2
n1O=1
Cmn1=send 3 digits if at 100%\\
mI=2
I1=15
I2=6
mO=1
tO=1
O1=27
]
[
ObjTp=Sm
H=25
SmC=77
ObjVer=1
PrH=7
CF=2
n1I=4
n1O=1
Cmn1=Build string for 3 digits, 100%\\
mI=4
I1=27
I2=24
I3=25
I4=26
mO=1
tO=1
O1=20
mP=4
P1=256d
P2=""
P3=""
P4=""
]
[
ObjTp=Sg
H=4
Nm=Analog_Volume_In
SgTp=2
]
[
ObjTp=Sg
H=5
Nm=vol_s
SgTp=2
]
[
ObjTp=Sg
H=6
Nm=trig
]
[
ObjTp=Sg
H=7
Nm=offset
SgTp=2
]
[
ObjTp=Sg
H=8
Nm=ten_to_99
SgTp=2
]
[
ObjTp=Sg
H=9
Nm=below_10
SgTp=2
]
[
ObjTp=Sg
H=10
Nm=vol_below_100
]
[
ObjTp=Sg
H=11
Nm=vol_at_100_pct
]
[
ObjTp=Sg
H=12
Nm=below_10_pct
]
[
ObjTp=Sg
H=13
Nm=send_1_digit
]
[
ObjTp=Sg
H=14
Nm=send_2_digit
]
[
ObjTp=Sg
H=15
Nm=send_3_digit
]
[
ObjTp=Sg
H=16
Nm=vol_s_r
SgTp=2
]
[
ObjTp=Sg
H=17
Nm=vol_ones
SgTp=2
]
[
ObjTp=Sg
H=18
Nm=trig_1
]
[
ObjTp=Sg
H=19
Nm=vol_s_q
SgTp=2
]
[
ObjTp=Sg
H=20
Nm=Serial_Volume_Text$
SgTp=4
]
[
ObjTp=Sg
H=21
Nm=vol_tens
SgTp=2
]
[
ObjTp=Sg
H=22
Nm=trig_2
]
[
ObjTp=Sg
H=23
Nm=at_full_vol
]
[
ObjTp=Sg
H=24
Nm=vol_full_huns
SgTp=2
]
[
ObjTp=Sg
H=25
Nm=vol_full_tens
SgTp=2
]
[
ObjTp=Sg
H=26
Nm=vol_full_ones
SgTp=2
]
[
ObjTp=Sg
H=27
Nm=trig_3
]
