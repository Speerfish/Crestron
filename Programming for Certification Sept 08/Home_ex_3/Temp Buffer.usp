/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:
System Number:
Programmer:
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #SYMBOL_NAME ""
// #HINT ""
// #DEFINE_CONSTANT
// #CATEGORY "" 
// #DEFAULT_VOLATILE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
#DEFAULT_NONVOLATILE
#ENABLE_STACK_CHECKING
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
// #USER_LIBRARY ""

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT Morning,_SKIP_,_SKIP_,Afternoon,_SKIP_,_SKIP_,Evening,_SKIP_,_SKIP_,Overnight,_SKIP_,_SKIP_;
ANALOG_INPUT Heat,Cool,_SKIP_;
// STRING_INPUT 
// BUFFER_INPUT 

// DIGITAL_OUTPUT 
ANALOG_OUTPUT Morning_Heat,Morning_Cool,_SKIP_;
ANALOG_OUTPUT Afternoon_Heat,Afternoon_Cool,_SKIP_;
ANALOG_OUTPUT Evening_Heat,Evening_Cool,_SKIP_;
ANALOG_OUTPUT Overnight_Heat,Overnight_Cool,_SKIP_;
// STRING_OUTPUT 

/*******************************************************************************************
  Structure Definitions
  (Uncomment and define structure definitions as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: struct.myString = "";
*******************************************************************************************/
/*
STRUCTURE MyStruct1
{
};

MyStruct1 struct;
*/

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
INTEGER TOD;
// LONG_INTEGER
// SIGNED_INTEGER
// SIGNED_LONG_INTEGER
// STRING

/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
/*
Function MyFunction1()
{
    // TODO:  Add local variable declarations here

    // TODO:  Add code here
}
*/

/*
Integer_Function MyIntFunction1()
{
    // TODO:  Add local variable declarations here

    // TODO:  Add code here

    Return (0);
}
*/

/*
String_Function MyStrFunction1()
{
    // TODO:  Add local variable declarations here

    // TODO:  Add code here

    Return ("");
}
*/

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/
PUSH Morning
{
	TOD = 1;
}
PUSH Afternoon
{
	TOD = 2;
}
PUSH Evening
{
	TOD = 3;
}
PUSH Overnight
{
	TOD = 4;
}
CHANGE Heat
{
	If(TOD = 1)
	{
		Morning_Heat = Heat;
	}
	If(TOD = 2)
	{
		Afternoon_Heat = Heat;
	}
	If(TOD = 3)
	{
		Evening_Heat = Heat;
	}
	If(TOD = 4)
	{
		Overnight_Heat = Heat;
	}	
}
CHANGE Cool
{
	If(TOD = 1)
	{
		Morning_Cool = Cool;
	}
	If(TOD = 2)
	{
		Afternoon_Cool = Cool;
	}
	If(TOD = 3)
	{
		Evening_Cool = Cool;
	}
	If(TOD = 4)
	{
		Overnight_Cool = Cool;
	}	
}

/*
RELEASE input
{
    // TODO:  Add code here
}
*/

/*
CHANGE input
{
    // TODO:  Add code here
}
*/

/*
EVENT
{
    // TODO:  Add code here
}
*/

/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/
/*
Function Main()
{
    // TODO:  Add code here
    // Initialize declared global and local variables/arrays as needed.

    // WaitForInitializationComplete();
    // If you are reading any Input or Output variables, uncomment
    //   the WaitForInitializationComplete statement above and read
    //   them afterwards.  Input/Output variables will not have
    //   their correct values set until after the logic processor
    //   runs and propagates the values to them.
}
*/

