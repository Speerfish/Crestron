/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: Crestron
System Name:
System Number:
Programmer: James Johnston
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
 #SYMBOL_NAME "iPod Virtual Engine Movies v1.1"
// #HINT ""
// #DEFINE_CONSTANT
// #CATEGORY "" 
// #DEFAULT_VOLATILE
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
// #USER_LIBRARY ""

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT First_Page;
DIGITAL_INPUT Page_Up;
DIGITAL_INPUT Page_Down;
DIGITAL_INPUT Last_Page;

DIGITAL_INPUT Previous_Song;
DIGITAL_INPUT Next_Song;

DIGITAL_INPUT Shuffle;
DIGITAL_INPUT Repeat;

DIGITAL_INPUT Select_Line[5];
//DIGITAL_INPUT Select_Song[20];

 
STRING_OUTPUT NowPlaying_Song$;
STRING_OUTPUT NowPlaying_Album$;
STRING_OUTPUT NowPlaying_Artist$;
ANALOG_OUTPUT NowPlaying_Duration$;
ANALOG_OUTPUT NowPlaying_AlbumArt;

STRING_OUTPUT NextUp_Song$;
STRING_OUTPUT NextUp_Album$;
STRING_OUTPUT NextUp_Artist$;
//ANALOG_OUTPUT NextUp_Duration$;

STRING_OUTPUT Shuffle_Mode$;
STRING_OUTPUT Repeat_Mode$;

ANALOG_OUTPUT Menu_Position;
ANALOG_OUTPUT NowPlaying_Index;

STRING_OUTPUT Menu_Line$[5];      
ANALOG_OUTPUT Album_Art_Menu_Line[5];


//STRING_OUTPUT Song_List$[20];
 

/*******************************************************************************************
  SOCKETS
  (Uncomment and define socket definitions as needed)
*******************************************************************************************/
// TCP_CLIENT
// TCP_SERVER
// UDP_SOCKET

/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/
// INTEGER_PARAMETER
// SIGNED_INTEGER_PARAMETER
// LONG_INTEGER_PARAMETER
// SIGNED_LONG_INTEGER_PARAMETER
// STRING_PARAMETER

/*******************************************************************************************
  Parameter Properties
  (Uncomment and declare parameter properties as needed)
*******************************************************************************************/
/*
#BEGIN_PARAMETER_PROPERTIES parameter_variable, parameter_variable, ...
   // propValidUnits = // unitString or unitDecimal|unitHex|unitPercent|unitCharacter|unitTime|unitTicks;
   // propDefaultUnit = // unitString, unitDecimal, unitHex, unitPercent, unitCharacter, unitTime or unitTicks;
   // propBounds = lower_bound , upper_bound;
   // propDefaultValue = ;  // or, propDefaultValue = "";
   // propList = // { "value" , "label" } , { "value" , "label" } , ... ;
   // propShortDescription = "status_bar_hint_text";
   // #BEGIN_PROP_FULL_DESCRIPTION  line_1...  line_2...  line_n  #END_PROP_FULL_DESCRIPTION
   // #BEGIN_PROP_NOTES line_1...  line_2...  line_n  #END_PROP_NOTES
#END_PARAMETER_PROPERTIES
*/

/*******************************************************************************************
  Structure Definitions
  (Uncomment and define structure definitions as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: struct.myString = "";
*******************************************************************************************/

STRUCTURE SongInfo_struct
{
	STRING Song[30];
	STRING Album[30];
	STRING Artist[30];
	INTEGER Duration;
	INTEGER AlbumArt;
};

SongInfo_struct SongInfo[20];

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
INTEGER NowPlayingIndex;
INTEGER MenuIndex;
INTEGER ShuffleIndex;
INTEGER RepeatIndex;
STRING ShuffleM[3][10];
STRING RepeatM[3][10];

/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/

INTEGER_FUNCTION CalcMenuPosition(INTEGER mIndex)
{
	RETURN(65535-((MenuIndex -1)*65535/15));
}

FUNCTION UpdateMenuOutput()
{
	INTEGER i;
	FOR (i=1 TO 5)
	{
		Menu_Line$[i] = SongInfo[MenuIndex +i -1].Song;
		Album_Art_Menu_Line[i] = SongInfo[MenuIndex +i -1].AlbumArt;  
	}
        
	Menu_Position =CalcMenuPosition(MenuIndex);
	NowPlaying_Index =NowPlayingIndex;
   

}

FUNCTION UpdateNowPlayingOutput()
{
NowPlaying_Song$ = SongInfo[NowPlayingIndex].Song;
NowPlaying_Album$ = SongInfo[NowPlayingIndex].Album;
NowPlaying_Artist$ = SongInfo[NowPlayingIndex].Artist;
NowPlaying_Duration$ = SongInfo[NowPlayingIndex].Duration;
NowPlaying_AlbumArt = SongInfo[NowPlayingindex].AlbumArt; 

NextUp_Song$ = SongInfo[((NowPlayingIndex MOD 20)+1)].Song;
NextUp_Album$ = SongInfo[((NowPlayingIndex MOD 20)+1)].Album;
NextUp_Artist$ = SongInfo[((NowPlayingIndex MOD 20)+1)].Artist;
//NextUp_Duration$ = SongInfo[((NowPlayingIndex MOD 20)+1)].Duration;

Menu_Position =CalcMenuPosition(MenuIndex);
NowPlaying_Index =NowPlayingIndex;
}	

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/

PUSH First_Page
{
	MenuIndex =1;
	UpdateMenuOutput();	   
}

PUSH Last_Page
{
	MenuIndex =16;
	UpdateMenuOutput();	   
}

PUSH Page_Up
{
	IF (MenuIndex != 1)
		{
			MenuIndex = (MenuIndex -5);
			UpdateMenuOutput();
		}	   
}

PUSH Page_Down
{
	IF (MenuIndex != 16)
		{
			MenuIndex = (MenuIndex +5);
			UpdateMenuOutput();
		}	   
}

PUSH Select_Line
{
	INTEGER lineSelected;
	lineSelected = GetLastModifiedArrayIndex ();
	NowPlayingIndex = MenuIndex -1 +lineSelected;
	UpdateNowPlayingOutput();
}

PUSH Previous_Song
{
	IF (NowPlayingIndex > 1)
	{
		NowPlayingIndex = NowPlayingIndex -1;
		UpdateNowPlayingOutput();
	}
	ELSE // NowPlayingIndex =1
	{
		NowPlayingIndex = 20;
		UpdateNowPlayingOutput();
	}	
}

PUSH Next_Song
{
	NowPlayingIndex = ( (NowPlayingIndex MOD 20)+1 );
	UpdateNowPlayingOutput();			
}

/*
PUSH Select_Song
{
	NowPlayingIndex = GetLastModifiedArrayIndex ();
	UpdateNowPlayingOutput();
}
*/

PUSH Shuffle
{
	ShuffleIndex = (ShuffleIndex MOD 3) +1;
    Shuffle_Mode$ = ShuffleM[ShuffleIndex];
}

PUSH Repeat
{
	RepeatIndex = (RepeatIndex MOD 3) +1;
    Repeat_Mode$ = RepeatM[RepeatIndex];
}

/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

FUNCTION Main()
{

INTEGER i;

NowPlayingIndex =1;
MenuIndex =1;

ShuffleIndex=1;
RepeatIndex=1;

ShuffleM[1]="Off";
ShuffleM[2]="Tracks";
ShuffleM[3]="Albums";

RepeatM[1]="Off";
RepeatM[2]="1 Track";
RepeatM[3]="All";

SongInfo[1].Song = "Watchmen";
SongInfo[1].Artist = "Zack Snyder";
SongInfo[1].Album = "Warner Bros. Pictures";
SongInfo[1].Duration = 9720;
SongInfo[1].AlbumArt = 1;
   
SongInfo[2].Song = "Valkyrie";
SongInfo[2].Artist = "Bryan Singer";
SongInfo[2].Album = "United Artists";
SongInfo[2].Duration = 7260;
SongInfo[2].AlbumArt = 2;

SongInfo[3].Song = "The Pink Panther 2";
SongInfo[3].Artist = "Harald Zwart";
SongInfo[3].Album = "Metro-Goldwyn-Mayer (MGM)";
SongInfo[3].Duration = 5520;
SongInfo[3].AlbumArt = 3;

SongInfo[4].Song = "Race to Witch Mountain";
SongInfo[4].Artist = "Andy Fickman";
SongInfo[4].Album = "Walt Disney Pictures";
SongInfo[4].Duration = 5880;
SongInfo[4].AlbumArt = 4;

SongInfo[5].Song = "Taken";
SongInfo[5].Artist = "Pierre Morel";
SongInfo[5].Album = "Europa Corp.";
SongInfo[5].Duration = 5580;
SongInfo[5].AlbumArt = 5;

SongInfo[6].Song = "Confessions of a Shopaholic";
SongInfo[6].Artist = "P.J. Hogan";
SongInfo[6].Album = "Touchstone Pictures";
SongInfo[6].Duration = 6240;
SongInfo[6].AlbumArt = 6;

SongInfo[7].Song = "Push";
SongInfo[7].Artist = "Paul McGuigan";
SongInfo[7].Album = "Summit Entertainment";
SongInfo[7].Duration = 6660;
SongInfo[7].AlbumArt = 7;

SongInfo[8].Song = "The Curious Case of Benjamin Button";
SongInfo[8].Artist = "David Fincher";
SongInfo[8].Album = "Warner Bros. Pictures";
SongInfo[8].Duration = 9960;
SongInfo[8].AlbumArt = 8;

SongInfo[9].Song = "He's Just Not That Into You";
SongInfo[9].Artist = "Ken Kwapis";
SongInfo[9].Album = "Flower Films (II)";
SongInfo[9].Duration = 7740;
SongInfo[9].AlbumArt = 9;

SongInfo[10].Song = "The Haunting in Conneticut";
SongInfo[10].Artist = "Peter Cornwell";
SongInfo[10].Album = "Gold Circle Films";
SongInfo[10].Duration = 5520;
SongInfo[10].AlbumArt = 10;

SongInfo[11].Song = "Fast & Furious";
SongInfo[11].Artist = "Justin Lin";
SongInfo[11].Album = "Neal H. Moritz Productions";
SongInfo[11].Duration = 6420;
SongInfo[11].AlbumArt = 11;

SongInfo[12].Song = "Coraline";
SongInfo[12].Artist = "Henry Selick";
SongInfo[12].Album = "Laika Entertainment";
SongInfo[12].Duration = 6000;
SongInfo[12].AlbumArt = 12;

SongInfo[13].Song = "The Knowing";
SongInfo[13].Artist = "Alex Proyas";
SongInfo[13].Album = "Summit Entertainment";
SongInfo[13].Duration = 7260;
SongInfo[13].AlbumArt = 13;

SongInfo[14].Song = "Obsessed";
SongInfo[14].Artist = "Steve Shill";
SongInfo[14].Album = "Screen Gems";
SongInfo[14].Duration = 6480;
SongInfo[14].AlbumArt = 14;

SongInfo[15].Song = "Friday The 13th";
SongInfo[15].Artist = "Marcus Nispel";
SongInfo[15].Album = "New Line Cinema";
SongInfo[15].Duration = 5820;
SongInfo[15].AlbumArt = 15;

SongInfo[16].Song = "The Unborn";
SongInfo[16].Artist = "David S. Goyer";
SongInfo[16].Album = "Relativity Media";
SongInfo[16].Duration = 5280;
SongInfo[16].AlbumArt = 16;

SongInfo[17].Song = "Underworld: Rise of the Lycans";
SongInfo[17].Artist = "Patrick Tatopoulos";
SongInfo[17].Album = "Sketch Films";
SongInfo[17].Duration = 5520;
SongInfo[17].AlbumArt = 17;

SongInfo[18].Song = "Gran Torino";
SongInfo[18].Artist = "Clint Eastwood";
SongInfo[18].Album = "Matten Productions";
SongInfo[18].Duration = 6960;
SongInfo[18].AlbumArt = 18;

SongInfo[19].Song = "Observe and Report";
SongInfo[19].Artist = "Jody Hill";
SongInfo[19].Album = "De Line Pictures";
SongInfo[19].Duration = 5160;
SongInfo[19].AlbumArt = 19;

SongInfo[20].Song = "Twilight";
SongInfo[20].Artist = "Catherine Hardwicke";
SongInfo[20].Album = "Summit Entertainment";
SongInfo[20].Duration = 7320;
SongInfo[20].AlbumArt = 20;

UpdateNowPlayingOutput();
UpdateMenuOutput();

Shuffle_Mode$="Off";
Repeat_Mode$="Off";

//FOR (i=1 TO 20)
//	Song_List$[i] = SongInfo[i].Song;

}


